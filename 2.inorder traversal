iterative traverasal
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans=new ArrayList<>();
        f(root,ans);
        return ans;
    }
    public void f(TreeNode root,List<Integer> ans){
        if(root==null){
            return;
        }
        
        f(root.left,ans);
        ans.add(root.val);
        f(root.right,ans);
    }
}
tc-->O(N)
sc-->O(N)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans=new ArrayList<>();
        if(root==null){
            return ans;
        }
        Stack<TreeNode> st=new Stack<>();
        TreeNode node =root;
        while(true){
            if(node!=null){
                
                st.push(node);
                node=node.left;
            }
            else{
                if(st.isEmpty()){
                    break;
                }
                node=st.pop();
                ans.add(node.val);
                node=node.right;
            }
        }
        return ans;
    }
}
